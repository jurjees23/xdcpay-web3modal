{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["detectEthereumProvider","then","res","Error","getXdcModal","display","name","logo","description","package","connector","_detectEthereumProvider","provider","enable","App","useState","setProvider","setAddress","web3Modal","Web3Modal","cacheProvider","disableInjectedProvider","providerOptions","walletconnect","WalletConnect","options","infuraId","network","qrcodeModalOptions","mobileLinks","onConnect","connect","instance","providerConnect","ethers","providers","Web3Provider","console","log","sendXdc","signer","getSigner","getAddress","address","params","from","to","value","utils","parseUnits","toHexString","send","transactionHash","align","type","onClick","ReactDOM","render","document","getElementById"],"mappings":";mjBAGAA,MAAyBC,MAAK,SAAAC,GAC5B,IAAKA,EACH,MAAM,IAAIC,MAAM,wC,IAIPC,EAAc,CACzBC,QAAS,CACPC,KAAM,UACNC,KAAM,+DACNC,YAAa,wBAEfC,QAAST,IACTU,UAAW,SAAOC,GAAT,IAAqC,uBACrBA,KADqB,eACtCC,GADsC,uBAEtCA,EAASC,UAF6B,iBAG5C,OAAOD,QAHA,qC,yyMCVX,IA+DeE,EA/DH,WAEV,MAAgCC,mBAAS,MAAzC,mBAAOH,EAAP,KAAiBI,EAAjB,KACA,EAA8BD,mBAAS,MAAvC,mBAAgBE,GAAhB,WAEMC,EAAY,IAAIC,IAAU,CAC9BC,eAAe,EACfC,yBAAyB,EACzBC,gBAAiB,CACfC,cAAe,CACbd,QAASe,IACTC,QAAS,CACPC,SAAU,mCACVC,QAAS,UACTC,mBAAoB,CAClBC,YAAa,CAAC,UAAW,WAAY,SAAU,QAAS,UAAW,aAIzE,aAAczB,KAIZ0B,EAAS,uCAAG,+GAGSZ,EAAUa,UAHnB,OAGRC,EAHQ,OAIRC,EAAkB,IAAIC,IAAOC,UAAUC,aAAaJ,GAC1DhB,EAAYiB,GALE,gDAQdI,QAAQC,IAAI,MAAZ,MARc,yDAAH,qDAYTC,EAAO,uCAAG,iGACRC,EAAS5B,EAAS6B,YADV,SAEQD,EAAOE,aAFf,cAERC,EAFQ,OAGd1B,EAAW0B,GACXN,QAAQC,IAAI,UAAWK,GAEjBC,EAAS,CAAC,CACdC,KAAMF,EACNG,GAAI,6CACJC,MAAOb,IAAOc,MAAMC,WAAW,IAAK,SAASC,gBATjC,SAYgBtC,EAASuC,KAAK,sBAAuBP,GAZrD,OAYRQ,EAZQ,OAadf,QAAQC,IAAI,sBAAwBc,GAbtB,4CAAH,qDAeb,OACE,yBAAKC,MAAM,UACT,iGAIEzC,GAAY,4BAAQ0C,KAAK,SAASC,QAASzB,GAA/B,WACblB,GAAY,4BAAQ0C,KAAK,SAASC,QAAShB,GAA/B,cCzDnBiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f141d7b2.chunk.js","sourcesContent":["import React from 'react'\nimport detectEthereumProvider from '@metamask/detect-provider'\n\ndetectEthereumProvider().then(res => {\n  if (!res) {\n    throw new Error('Unable to detect window.ethereum.')\n  }\n})\n\nexport const getXdcModal = {\n  display: {\n    name: 'XDC Pay',\n    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/2634.png',\n    description: 'Connect with XDC Pay'\n  },\n  package: detectEthereumProvider,\n  connector: async (_detectEthereumProvider) => {\n    const provider = await _detectEthereumProvider();\n    await provider.enable();\n    return provider;\n  }\n}\n","import React, { useState } from 'react';\nimport Web3Modal from 'web3modal';\nimport WalletConnect from \"@walletconnect/web3-provider\";\nimport { ethers } from 'ethers';\nimport { getXdcModal } from 'xdcpay-web3modal'\n\nconst App = () => {\n\n  const [provider, setProvider] = useState(null)\n  const [address, setAddress] = useState(null)\n\n  const web3Modal = new Web3Modal({\n    cacheProvider: true,\n    disableInjectedProvider: false,\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnect, // required\n        options: {\n          infuraId: \"223f20f418c34a758240a7f416435110\", // Required\n          network: \"mainnet\",\n          qrcodeModalOptions: {\n            mobileLinks: [\"rainbow\", \"metamask\", \"argent\", \"trust\", \"imtoken\", \"pillar\"]\n          }\n        }\n      },\n      'custom-xdc': getXdcModal, // Add One line in  web3modal provider\n    }\n  });\n\n  const onConnect = async () => {\n\n    try {\n      const instance = await web3Modal.connect();\n      const providerConnect = new ethers.providers.Web3Provider(instance);\n      setProvider(providerConnect)\n\n    } catch (err) {\n      console.log(\"err\", err)\n    }\n  }\n\n  const sendXdc = async () => {\n    const signer = provider.getSigner();\n    const address = await signer.getAddress();\n    setAddress(address)\n    console.log(\"Address\", address)\n    // Acccounts now exposed\n    const params = [{\n      from: address,\n      to: \"0x117c691d76c1d9c68e3709a87f7d496097f2b56f\",\n      value: ethers.utils.parseUnits('1', 'ether').toHexString()\n    }];\n\n    const transactionHash = await provider.send('eth_sendTransaction', params)\n    console.log('transactionHash is ' + transactionHash);\n  }\n  return (\n    <div align=\"center\">\n      <h3>How to connect XDC Pay wallet (chrome extension) with  Web3Modal</h3>\n\n\n\n      {!provider && <button type='button' onClick={onConnect}>Connect</button>}\n      {provider && <button type='button' onClick={sendXdc}>Send XDC</button>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}